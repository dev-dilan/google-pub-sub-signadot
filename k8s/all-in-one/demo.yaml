apiVersion: v1
kind: ServiceAccount
metadata:
  name: consumer
  namespace: pubsub-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: pubsub-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      serviceAccountName: consumer
      enableServiceLinks: false
      containers:
        - name: consumer
          image: signadot/pubsub-demo:latest
          command:
            - "npm"
            - "run"
            - "consumer"
          env:
            - name: BASELINE_NAME
              value: "consumer"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 40001
          securityContext:
            # Run with the "node" user
            runAsUser: 1000
            runAsGroup: 1000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: pubsub-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: pubsub-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      serviceAccountName: frontend
      enableServiceLinks: false
      containers:
        - name: frontend
          image: signadot/pubsub-demo:latest
          command:
            - "npm"
            - "run"
            - "frontend"
          env:
            - name: FRONTEND_PORT
              value: "40000"
            - name: BASELINE_NAME
              value: "frontend"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 40000
          securityContext:
            # Run with the "node" user
            runAsUser: 1000
            runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: pubsub-demo
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - port: 4000
      targetPort: 40000
      name: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: producer
  namespace: pubsub-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: pubsub-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      serviceAccountName: producer
      enableServiceLinks: false
      containers:
        - name: producer
          image: signadot/pubsub-demo:latest
          command:
            - "npm"
            - "run"
            - "producer"
          env:
            - name: PRODUCER_PORT
              value: "40001"
            - name: BASELINE_NAME
              value: "producer"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 40001
          securityContext:
            # Run with the "node" user
            runAsUser: 1000
            runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: producer
  namespace: pubsub-demo
  labels:
    app: producer
spec:
  type: ClusterIP
  selector:
    app: producer
  ports:
    - port: 4001
      targetPort: 40001
      name: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis
  namespace: pubsub-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: pubsub-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      serviceAccountName: redis
      containers:
        - name: redis
          image: redis:7.2.3
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: "0.1"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: pubsub-demo
  labels:
    app: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      name: redis
---
